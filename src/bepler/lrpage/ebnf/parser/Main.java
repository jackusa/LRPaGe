
package bepler.lrpage.ebnf.parser;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import bepler.lrpage.ebnf.parser.framework.BurkeFischerErrorRepair;
import bepler.lrpage.ebnf.parser.framework.Lexer;
import bepler.lrpage.ebnf.parser.framework.Node;
import bepler.lrpage.ebnf.parser.framework.Parser;
import bepler.lrpage.ebnf.parser.framework.TokenFactory;


/**
 * This class was generated by the LRPaGe parser generator v1.0 using the com.sun.codemodel library.
 * 
 * <P>LRPaGe is available from https://github.com/tbepler/LRPaGe.
 * <P>CodeModel is available from https://codemodel.java.net/.
 * 
 */
public class Main {


    public static void main(String[] args)
        throws IOException
    {
        Visitor visitor = new PrintVisitor();
        TokenFactory<Visitor> factory = new TokenFactoryImpl();
        Parser<Visitor> parser = new Parser<Visitor>(new ParsingEngineImpl());
        String line;
        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
        while (((line = reader.readLine()) != null)) {
            if (line.equals("q")) {
                break;
            }
            Lexer<Visitor> lexer = new Lexer<Visitor>(line, factory);
            while (lexer.hasNext()) {
                System.out.print((lexer.nextToken()+" "));
            }
            System.out.println();
            lexer = new Lexer<Visitor>(line, factory);
            Node<Visitor> root = parser.parse(lexer, new BurkeFischerErrorRepair<Visitor>(10, 4));
            if (root!= null) {
                root.accept(visitor);
            }
        }
    }

}
