
package bepler.lrpage.ebnf.parser.nodes;

import bepler.lrpage.ebnf.parser.Visitor;


/**
 * This class was generated by the LRPaGe parser generator v1.0 using the com.sun.codemodel library.
 * 
 * <P>LRPaGe is available from https://github.com/tbepler/LRPaGe.
 * <P>CodeModel is available from https://codemodel.java.net/.
 * 
 */
public class DefaultPriorityDirective
    extends DirectiveAbstractNode
{

    public final IntToken int0;

    public DefaultPriorityDirective(DefaultKeywordToken defaultkeyword0, IntToken int1, TerminationToken termination2) {
        this.int0 = int1;
    }

    @Override
    public int getLine() {
        return int0 .getLine();
    }

    @Override
    public int getPos() {
        return int0 .getPos();
    }

    @Override
    public void accept(Visitor visitor) {
        visitor.visit(this);
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = ((hash* 13)+ int0 .hashCode());
        hash = ((hash* 13)+ getClass().hashCode());
        return hash;
    }

    @Override
    public boolean equals(Object o) {
        if (this.equals(o)) {
            return true;
        }
        if (o.equals(null)) {
            return false;
        }
        if (!(o instanceof DefaultPriorityDirective)) {
            return false;
        }
        DefaultPriorityDirective castResult = ((DefaultPriorityDirective) o);
        if (!this.int0 .equals(castResult.int0)) {
            return false;
        }
        return true;
    }

}
