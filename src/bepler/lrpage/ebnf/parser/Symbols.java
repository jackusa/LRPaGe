
package bepler.lrpage.ebnf.parser;

import bepler.lrpage.ebnf.parser.framework.Symbol;


/**
 * This class was generated by the LRPaGe parser generator v1.0 using the com.sun.codemodel library.
 * 
 * <P>LRPaGe is available from https://github.com/tbepler/LRPaGe.
 * <P>CodeModel is available from https://codemodel.java.net/.
 * 
 */
public enum Symbols
    implements Symbol
{

    EOF,
    DEFINITION("="),
    CONCATENATION(","),
    TERMINATION(";"),
    ALTERNATION("|"),
    STARTOPTION("["),
    ENDOPTION("]"),
    STARTREPETITION("{"),
    ENDREPETITION("}"),
    STARTGROUPING("("),
    ENDGROUPING(")"),
    BANG("!"),
    SPECIAL("#"),
    LEFTKEYWORD("Left"),
    RIGHTKEYWORD("Right"),
    NONKEYWORD("Non"),
    PRECKEYWORD("prec"),
    NAMEKEYWORD("name"),
    DEFAULTKEYWORD("default"),
    PRECEDENCEKEYWORD("Precedence"),
    TOKENSKEYWORD("Tokens"),
    IGNOREKEYWORD("Ignore"),
    RULESKEYWORD("Rules"),
    STARTBLOCK(":"),
    INT,
    IDENTIFIER,
    TERMINALSTRING,
    ERROR,
    RULEDECLLIST,
    TOKENDECLLIST,
    NAMEDECL,
    DIRECTIVE,
    GRAMMAR,
    BLOCK,
    PRECDECL,
    SYMBOLLIST,
    ASSOC,
    DIRECTIVELIST,
    SYMBOL,
    RULEDECL,
    TOKENDECL,
    RHS;
    private final String name;

    private Symbols(String name) {
        this.name = name;
    }

    private Symbols() {
        this.name = null;
    }

    @Override
    public String toString() {
        if (name == null) {
            return super.toString();
        }
        return name;
    }

    @Override
    public int type() {
        return this.ordinal();
    }

}
